{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/model/auth.service.ts","./src/app/model/cart.model.ts","./src/app/model/connection.service.ts","./src/app/model/model.module.ts","./src/app/model/order.model.ts","./src/app/model/order.repository.ts","./src/app/model/product.model.ts","./src/app/model/product.repository.ts","./src/app/model/rest.datasource.ts","./src/app/model/static.datasource.ts","./src/app/store/cartDetail.component.ts","./src/app/store/cartDetail.component.html","./src/app/store/cartSummary.component.ts","./src/app/store/cartSummary.component.html","./src/app/store/checkout.component.ts","./src/app/store/checkout.component.html","./src/app/store/counter.directive.ts","./src/app/store/store.component.ts","./src/app/store/store.component.html","./src/app/store/store.module.ts","./src/app/storeFirst.guard.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"app\",\n    template: \"<router-outlet></router-outlet>\"\n})\nexport class AppComponent { }\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { AppComponent } from \"./app.component\";\nimport { StoreModule } from \"./store/store.module\";\nimport { StoreComponent } from \"./store/store.component\";\nimport { CheckoutComponent } from \"./store/checkout.component\";\nimport { CartDetailComponent } from \"./store/cartDetail.component\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { StoreFirstGuard } from \"./storeFirst.guard\";\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\n\n@NgModule({\n    imports: [BrowserModule, StoreModule,\n        RouterModule.forRoot([\n            {\n                path: \"store\", component: StoreComponent,\n                canActivate: [StoreFirstGuard]\n            },\n            {\n                path: \"cart\", component: CartDetailComponent,\n                canActivate: [StoreFirstGuard]\n            },\n            {\n                path: \"checkout\", component: CheckoutComponent,\n                canActivate: [StoreFirstGuard]\n            },\n            {\n                path: \"admin\",\n                loadChildren: () => import(\"./admin/admin.module\")\n                    .then(m => m.AdminModule),\n                canActivate: [StoreFirstGuard]\n            },\n            { path: \"**\", redirectTo: \"/store\" }\n        ]),\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })],\n    providers: [{ provide: LocationStrategy, useClass: HashLocationStrategy }, StoreFirstGuard],\n    declarations: [AppComponent],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { RestDataSource } from \"./rest.datasource\";\n\n@Injectable()\nexport class AuthService {\n\n    constructor(private datasource: RestDataSource) {}\n\n    authenticate(username: string, password: string): Observable<boolean> {\n        return this.datasource.authenticate(username, password);\n    }\n\n    get authenticated(): boolean {\n        return this.datasource.auth_token != null;\n    }\n\n    clear() {\n        this.datasource.auth_token = null;\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Product } from \"./product.model\";\n\n@Injectable()\nexport class Cart {\n    public lines: CartLine[] = [];\n    public itemCount: number = 0;\n    public cartPrice: number = 0;\n\n    addLine(product: Product, quantity: number = 1) {\n        let line = this.lines.find(line => line.product.id == product.id);\n        if (line != undefined) {\n            line.quantity += quantity;    \n        } else {\n            this.lines.push(new CartLine(product, quantity));\n        }\n        this.recalculate();\n    }\n\n    updateQuantity(product: Product, quantity: number) {\n        let line = this.lines.find(line => line.product.id == product.id);\n        if (line != undefined) {\n            line.quantity = Number(quantity);\n        }\n        this.recalculate();\n    }\n\n    removeLine(id: number) {\n        let index = this.lines.findIndex(line => line.product.id == id);\n        this.lines.splice(index, 1);\n        this.recalculate();\n    }\n\n    clear() {\n        this.lines = [];\n        this.itemCount = 0;\n        this.cartPrice = 0;\n    }\n\n    private recalculate() {\n        this.itemCount = 0;\n        this.cartPrice = 0;\n        this.lines.forEach(l => {\n            this.itemCount += l.quantity;\n            this.cartPrice += (l.quantity * l.product.price);\n        })\n    }\n}\n\nexport class CartLine {\n    \n    constructor(public product: Product,\n        public quantity: number) {}\n\n    get lineTotal() {\n        return this.quantity * this.product.price;\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\n@Injectable()\nexport class ConnectionService {\nprivate connEvents: Subject<boolean>;\nconstructor() {\nthis.connEvents = new Subject<boolean>();\nwindow.addEventListener(\"online\",\n(e) => this.handleConnectionChange(e));\nwindow.addEventListener(\"offline\",\n(e) => this.handleConnectionChange(e));\n}\nprivate handleConnectionChange(event) {\n    this.connEvents.next(this.connected);\n    }\n    get connected() : boolean {\n    return window.navigator.onLine;\n    }\n    get Changes(): Observable<boolean> {\n    return this.connEvents;\n    }\n    }","import { NgModule } from \"@angular/core\";\nimport { ProductRepository } from \"./product.repository\";\nimport { StaticDataSource } from \"./static.datasource\";\nimport { Cart } from \"./cart.model\";\nimport { Order } from \"./order.model\";\nimport { OrderRepository } from \"./order.repository\";\nimport { RestDataSource } from \"./rest.datasource\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AuthService } from \"./auth.service\";\nimport { ConnectionService } from \"./connection.service\";\n\n@NgModule({\n  imports: [HttpClientModule],\n  providers: [ProductRepository, Cart, Order, OrderRepository,\n    { provide: StaticDataSource, useClass: RestDataSource },\n    RestDataSource, AuthService, ConnectionService]\n})\nexport class ModelModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Cart } from \"./cart.model\";\n\n@Injectable()\nexport class Order {\n    public id: number;\n    public name: string;\n    public address: string;\n    public city: string;\n    public state: string;\n    public zip: string;\n    public country: string;\n    public shipped: boolean = false;\n\n    constructor(public cart: Cart) { }\n\n    clear() {\n        this.id = null;\n        this.name = this.address = this.city = null;\n        this.state = this.zip = this.country = null;\n        this.shipped = false;\n        this.cart.clear();\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Order } from \"./order.model\";\n//import { StaticDataSource } from \"./static.datasource\";\nimport { RestDataSource } from \"./rest.datasource\";\n\n@Injectable()\nexport class OrderRepository {\n    private orders: Order[] = [];\n    private loaded: boolean = false;\n\n    constructor(private dataSource: RestDataSource) { }\n\n    loadOrders() {\n        this.loaded = true;\n        this.dataSource.getOrders()\n            .subscribe(orders => this.orders = orders);\n    }\n\n    getOrders(): Order[] {\n        if (!this.loaded) {\n            this.loadOrders();\n        }\n        return this.orders;\n    }\n\n    saveOrder(order: Order): Observable<Order> {\n        return this.dataSource.saveOrder(order);\n    }\n\n    updateOrder(order: Order) {\n        this.dataSource.updateOrder(order).subscribe(order => {\n            this.orders.splice(this.orders.\n                findIndex(o => o.id == order.id), 1, order);\n        });\n    }\n\n    deleteOrder(id: number) {\n        this.dataSource.deleteOrder(id).subscribe(order => {\n            this.orders.splice(this.orders.findIndex(o => id == o.id), 1);\n        });\n    }\n}\n","export class Product {\n\n    constructor(\n        public id?: number,\n        public name?: string,\n        public category?: string,\n        public description?: string,\n        public price?: number) { }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Product } from \"./product.model\";\n//import { StaticDataSource } from \"./static.datasource\";\nimport { RestDataSource } from \"./rest.datasource\";\n\n@Injectable()\nexport class ProductRepository {\n    private products: Product[] = [];\n    private categories: string[] = [];\n\n    constructor(private dataSource: RestDataSource) {\n        dataSource.getProducts().subscribe(data => {\n            this.products = data;\n            this.categories = data.map(p => p.category)\n                .filter((c, index, array) => array.indexOf(c) == index).sort();\n        });\n    }\n\n    getProducts(category: string = null): Product[] {\n        return this.products\n            .filter(p => category == null || category == p.category);\n    }\n\n    getProduct(id: number): Product {\n        return this.products.find(p => p.id == id);\n    }\n\n    getCategories(): string[] {\n        return this.categories;\n    }\n\n    saveProduct(product: Product) {\n        if (product.id == null || product.id == 0) {\n            this.dataSource.saveProduct(product)\n                .subscribe(p => this.products.push(p));\n        } else {\n            this.dataSource.updateProduct(product)\n                .subscribe(p => {\n                    this.products.splice(this.products.\n                        findIndex(p => p.id == product.id), 1, product);\n                });\n        }\n    }\n\n    deleteProduct(id: number) {\n        this.dataSource.deleteProduct(id).subscribe(p => {\n            this.products.splice(this.products.\n                findIndex(p => p.id == id), 1);\n        })\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Product } from \"./product.model\";\nimport { Cart } from \"./cart.model\";\nimport { Order } from \"./order.model\";\nimport { map } from \"rxjs/operators\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n\n\nconst PROTOCOL = \"http\";\nconst PORT = 3500;\n\n@Injectable()\nexport class RestDataSource {\n    baseUrl: string;\n    auth_token: string;\n\n    constructor(private http: HttpClient) {\n        this.baseUrl = `${environment.apiUrl}/`;\n// this.baseUrl = \"/api/\"\n    }\n\n    getProducts(): Observable<Product[]> {\n        return this.http.get<Product[]>(this.baseUrl + \"products\");\n    }\n\n    saveOrder(order: Order): Observable<Order> {\n        return this.http.post<Order>(this.baseUrl + \"orders\", order);\n    }\n\n    authenticate(user: string, pass: string): Observable<boolean> {\n        return this.http.post<any>(this.baseUrl + \"login\", {\n            name: user, password: pass\n        }).pipe(map(response => {\n            this.auth_token = response.success ? response.token : null;\n            return response.success;\n        }));\n    }\n\n    saveProduct(product: Product): Observable<Product> {\n        return this.http.post<Product>(this.baseUrl + \"products\",\n            product, this.getOptions());\n    }\n\n    updateProduct(product): Observable<Product> {\n        return this.http.put<Product>(`${this.baseUrl}products/${product.id}`,\n            product, this.getOptions());\n    }\n\n    deleteProduct(id: number): Observable<Product> {\n        return this.http.delete<Product>(`${this.baseUrl}products/${id}`,\n            this.getOptions());\n    }\n\n    getOrders(): Observable<Order[]> {\n        return this.http.get<Order[]>(this.baseUrl + \"orders\", this.getOptions());\n    }\n\n    deleteOrder(id: number): Observable<Order> {\n        return this.http.delete<Order>(`${this.baseUrl}orders/${id}`,\n            this.getOptions());\n    }\n\n    updateOrder(order: Order): Observable<Order> {\n        return this.http.put<Order>(`${this.baseUrl}orders/${order.id}`,\n            order, this.getOptions());\n    }\n\n    private getOptions() {\n        return {\n            headers: new HttpHeaders({\n                \"Authorization\": `Bearer ${this.auth_token}`\n            })\n        }\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Product } from \"./product.model\";\nimport { Observable, from } from \"rxjs\";\nimport { Order } from \"./order.model\";\n\n@Injectable()\nexport class StaticDataSource {\n    private products: Product[] = [\n        new Product(1, \"Product 1\", \"Category 1\", \"Product 1 (Category 1)\", 100),\n        new Product(2, \"Product 2\", \"Category 1\", \"Product 2 (Category 1)\", 100),\n        new Product(3, \"Product 3\", \"Category 1\", \"Product 3 (Category 1)\", 100),\n        new Product(4, \"Product 4\", \"Category 1\", \"Product 4 (Category 1)\", 100),\n        new Product(5, \"Product 5\", \"Category 1\", \"Product 5 (Category 1)\", 100),\n        new Product(6, \"Product 6\", \"Category 2\", \"Product 6 (Category 2)\", 100),\n        new Product(7, \"Product 7\", \"Category 2\", \"Product 7 (Category 2)\", 100),\n        new Product(8, \"Product 8\", \"Category 2\", \"Product 8 (Category 2)\", 100),\n        new Product(9, \"Product 9\", \"Category 2\", \"Product 9 (Category 2)\", 100),\n        new Product(10, \"Product 10\", \"Category 2\", \"Product 10 (Category 2)\", 100),\n        new Product(11, \"Product 11\", \"Category 3\", \"Product 11 (Category 3)\", 100),\n        new Product(12, \"Product 12\", \"Category 3\", \"Product 12 (Category 3)\", 100),\n        new Product(13, \"Product 13\", \"Category 3\", \"Product 13 (Category 3)\", 100),\n        new Product(14, \"Product 14\", \"Category 3\", \"Product 14 (Category 3)\", 100),\n        new Product(15, \"Product 15\", \"Category 3\", \"Product 15 (Category 3)\", 100),\n    ];\n\n    getProducts(): Observable<Product[]> {\n        return from([this.products]);\n    }\n\n    saveOrder(order: Order): Observable<Order> {\n        console.log(JSON.stringify(order));\n        return from([order]);\n    }\n}\n","import { Component } from \"@angular/core\";\nimport { Cart } from \"../model/cart.model\";\nimport { ConnectionService } from \"../model/connection.service\";\n\n@Component({\n    templateUrl: \"cartDetail.component.html\"\n})\nexport class CartDetailComponent {\n\n    public connected: boolean = true;\nconstructor(public cart: Cart, private connection: ConnectionService) {\nthis.connected = this.connection.connected;\nconnection.Changes.subscribe((state) => this.connected = state);\n }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col bg-dark text-white\">\n        <a class=\"navbar-brand\"> SPORTS STORE</a>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col mt-2\">\n        <h2 class=\"text-center\">Your Cart</h2>\n        <table class=\"table table-bordered table-striped p-2\">\n          <thead>\n            <tr>\n              <th>Quantity</th>\n              <th>Product</th>\n              <th class=\"text-right\">Price</th>\n              <th class=\"text-right\">Subtotal</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngIf=\"cart.lines.length == 0\">\n              <td colspan=\"4\" class=\"text-center\">\n                Your cart is empty\n              </td>\n            </tr>\n            <tr *ngFor=\"let line of cart.lines\">\n              <td>\n                <input type=\"number\" class=\"form-control-sm\"\n                       style=\"width:5em\"\n                       [value]=\"line.quantity\"\n                       (change)=\"cart.updateQuantity(line.product,\n                                  $event.target.value)\" />\n              </td>\n              <td>{{line.product.name}}</td>\n              <td class=\"text-right\">\n                  {{line.product.price | currency:\"USD\":\"symbol\":\"2.2-2\"}}\n              </td>\n              <td class=\"text-right\">\n                  {{(line.lineTotal) | currency:\"USD\":\"symbol\":\"2.2-2\" }}\n              </td>\n              <td class=\"text-center\">\n                <button class=\"btn btn-sm btn-danger\"\n                        (click)=\"cart.removeLine(line.product.id)\">\n                  Remove\n                </button>\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan=\"3\" class=\"text-right\">Total:</td>\n              <td class=\"text-right\">\n                {{cart.cartPrice | currency:\"USD\":\"symbol\":\"2.2-2\"}}\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n      <div class=\"text-center\">\n        <button class=\"btn btn-primary m-1\" routerLink=\"/store\">\n            Continue Shopping\n        </button>\n        <button class=\"btn btn-secondary m-1\" routerLink=\"/checkout\"\n        [disabled]=\"cart.lines.length == 0 || !connected\">\n        {{ connected ? 'Checkout' : 'Offline' }}\n        </button>\n      </div>\n    </div>\n  </div>\n  ","import { Component } from \"@angular/core\";\nimport { Cart } from \"../model/cart.model\";\n\n@Component({\n    selector: \"cart-summary\",\n    templateUrl: \"cartSummary.component.html\"\n})\nexport class CartSummaryComponent {\n\n    constructor(public cart: Cart) { }\n}\n","<div class=\"float-right\">\n    <small>\n      Your cart:\n      <span *ngIf=\"cart.itemCount > 0\">\n        {{ cart.itemCount }} item(s)\n        {{ cart.cartPrice | currency:\"USD\":\"symbol\":\"2.2-2\" }}\n      </span>\n      <span *ngIf=\"cart.itemCount == 0\">\n        (empty)\n      </span>\n    </small>\n    <button class=\"btn btn-sm bg-dark text-white\"\n        [disabled]=\"cart.itemCount == 0\" routerLink=\"/cart\">\n      <i class=\"fa fa-shopping-cart\"></i>\n    </button>\n  </div>\n  ","import { Component } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { OrderRepository } from \"../model/order.repository\";\nimport { Order } from \"../model/order.model\";\n\n@Component({\n    templateUrl: \"checkout.component.html\",\n    styleUrls: [\"checkout.component.css\"]\n})\nexport class CheckoutComponent {\n    orderSent: boolean = false;\n    submitted: boolean = false;\n\n    constructor(public repository: OrderRepository,\n                public order: Order) {}\n\n    submitOrder(form: NgForm) {\n        this.submitted = true;\n        if (form.valid) {\n            this.repository.saveOrder(this.order).subscribe(order => {\n                this.order.clear();\n                this.orderSent = true;\n                this.submitted = false;\n            });\n        }\n    }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col bg-dark text-white\">\n        <a class=\"navbar-brand\">SPORTS STORE</a>\n      </div>\n    </div>\n  </div>\n  \n  <div *ngIf=\"orderSent\" class=\"m-2 text-center\">\n    <h2>Thanks!</h2>\n    <p>Thanks for placing your order.</p>\n    <p>We'll ship your goods as soon as possible.</p>\n    <button class=\"btn btn-primary\" routerLink=\"/store\">Return to Store</button>\n  </div>\n  <form *ngIf=\"!orderSent\" #form=\"ngForm\" novalidate\n        (ngSubmit)=\"submitOrder(form)\" class=\"m-2\">\n    <div class=\"form-group\">\n      <label>Name</label>\n      <input class=\"form-control\" #name=\"ngModel\" name=\"name\"\n              [(ngModel)]=\"order.name\" required />\n      <span *ngIf=\"submitted && name.invalid\" class=\"text-danger\">\n        Please enter your name\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label>Address</label>\n      <input class=\"form-control\" #address=\"ngModel\" name=\"address\"\n              [(ngModel)]=\"order.address\" required />\n      <span *ngIf=\"submitted && address.invalid\" class=\"text-danger\">\n        Please enter your address\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label>City</label>\n      <input class=\"form-control\" #city=\"ngModel\" name=\"city\"\n              [(ngModel)]=\"order.city\" required />\n      <span *ngIf=\"submitted && city.invalid\" class=\"text-danger\">\n        Please enter your city\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label>State</label>\n      <input class=\"form-control\" #state=\"ngModel\" name=\"state\"\n              [(ngModel)]=\"order.state\" required />\n      <span *ngIf=\"submitted && state.invalid\" class=\"text-danger\">\n        Please enter your state\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label>Zip/Postal Code</label>\n      <input class=\"form-control\" #zip=\"ngModel\" name=\"zip\"\n              [(ngModel)]=\"order.zip\" required />\n      <span *ngIf=\"submitted && zip.invalid\" class=\"text-danger\">\n        Please enter your zip/postal code\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label>Country</label>\n      <input class=\"form-control\" #country=\"ngModel\" name=\"country\"\n              [(ngModel)]=\"order.country\" required />\n      <span *ngIf=\"submitted && country.invalid\" class=\"text-danger\">\n        Please enter your country\n      </span>\n    </div>\n    <div class=\"text-center\">\n      <button class=\"btn btn-secondary m-1\" routerLink=\"/cart\">Back</button>\n      <button class=\"btn btn-primary m-1\" type=\"submit\">Complete Order</button>\n    </div>\n  </form>\n  ","import {\n    Directive, ViewContainerRef, TemplateRef, Input, Attribute, SimpleChanges\n} from \"@angular/core\";\n\n@Directive({\n    selector: \"[counterOf]\"\n})\nexport class CounterDirective {\n\n    constructor(private container: ViewContainerRef,\n        private template: TemplateRef<Object>) {\n    }\n\n    @Input(\"counterOf\")\n    counter: number;\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.container.clear();\n        for (let i = 0; i < this.counter; i++) {\n            this.container.createEmbeddedView(this.template,\n                new CounterDirectiveContext(i + 1));\n        }\n    }\n}\n\nclass CounterDirectiveContext {\n    constructor(public $implicit: any) { }\n}\n","import { Component } from \"@angular/core\";\nimport { Product } from \"../model/product.model\";\nimport { ProductRepository } from \"../model/product.repository\";\nimport { Cart } from \"../model/cart.model\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n    selector: \"store\",\n    templateUrl: \"store.component.html\"\n})\nexport class StoreComponent {\n    public selectedCategory = null;\n    public productsPerPage = 4;\n    public selectedPage = 1;\n\n    constructor(private repository: ProductRepository,\n        private cart: Cart,\n        private router: Router) { }\n\n    get products(): Product[] {\n        let pageIndex = (this.selectedPage - 1) * this.productsPerPage\n        return this.repository.getProducts(this.selectedCategory)\n            .slice(pageIndex, pageIndex + this.productsPerPage);\n    }\n\n    get categories(): string[] {\n        return this.repository.getCategories();\n    }\n\n    changeCategory(newCategory?: string) {\n        this.selectedCategory = newCategory;\n    }\n\n    changePage(newPage: number) {\n        this.selectedPage = newPage;\n    }\n\n    changePageSize(newSize: number) {\n        this.productsPerPage = Number(newSize);\n        this.changePage(1);\n    }\n\n    get pageCount(): number {\n        return Math.ceil(this.repository\n            .getProducts(this.selectedCategory).length / this.productsPerPage)\n    }\n\n    addProductToCart(product: Product) {\n        this.cart.addLine(product);\n        this.router.navigateByUrl(\"/cart\");\n    }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col bg-dark text-white\">\n        <a class=\"navbar-brand\"> FAROUK'S SPORTS STORE</a>\n        <cart-summary></cart-summary>\n      </div>\n    </div>\n    <div class=\"row\">\n  \n      <div class=\"col-3 p-2\">\n        <button class=\"btn btn-block btn-outline-primary\" (click)=\"changeCategory()\">\n          Home\n        </button>\n        <button *ngFor=\"let cat of categories\" \n            class=\"btn btn-outline-primary btn-block\"\n            [class.active]=\"cat == selectedCategory\" (click)=\"changeCategory(cat)\">\n          {{cat}}\n        </button>\n        <button class=\"btn btn-block btn-danger mt-5\" routerLink=\"/admin\">\n            Admin\n          </button>    \n      </div>\n  \n      <div class=\"col-9 p-2\">\n        <div *ngFor=\"let product of products\" class=\"card m-1 p-1 bg-light\">\n          <h4>\n            {{product.name}}\n            <span class=\"badge badge-pill badge-primary float-right\">\n              {{ product.price | currency:\"USD\":\"symbol\":\"2.2-2\" }}\n            </span>\n          </h4>\n          <div class=\"card-text bg-white p-1\">\n            {{product.description}}\n            <button class=\"btn btn-success btn-sm float-right\"\n                    (click)=\"addProductToCart(product)\">\n              Add To Cart\n            </button>\n          </div>\n        </div>\n  \n        <div class=\"form-inline float-left mr-1\">\n          <select class=\"form-control\" [value]=\"productsPerPage\"\n                  (change)=\"changePageSize($event.target.value)\">\n            <option value=\"3\">3 per Page</option>\n            <option value=\"4\">4 per Page</option>\n            <option value=\"6\">6 per Page</option>\n            <option value=\"8\">8 per Page</option>\n          </select>\n        </div>\n  \n        <div class=\"btn-group float-right\">\n          <button *counter=\"let page of pageCount\" (click)=\"changePage(page)\"\n              class=\"btn btn-outline-primary\" [class.active]=\"page == selectedPage\">\n            {{page}}\n          </button>\n        </div>\n  \n      </div>\n    </div>\n  </div>\n  ","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ModelModule } from \"../model/model.module\";\nimport { StoreComponent } from \"./store.component\";\nimport { CounterDirective } from \"./counter.directive\";\nimport { CartSummaryComponent } from \"./cartSummary.component\";\nimport { CartDetailComponent } from \"./cartDetail.component\";\nimport { CheckoutComponent } from \"./checkout.component\";\nimport { RouterModule } from \"@angular/router\";\n\n@NgModule({\n    imports: [ModelModule, BrowserModule, FormsModule, RouterModule],\n    declarations: [StoreComponent, CounterDirective, CartSummaryComponent,\n        CartDetailComponent, CheckoutComponent],\n    exports: [StoreComponent, CartDetailComponent, CheckoutComponent]\n})\nexport class StoreModule { }\n","import { Injectable } from \"@angular/core\";\nimport {\n    ActivatedRouteSnapshot, RouterStateSnapshot,\n    Router\n} from \"@angular/router\";\nimport { StoreComponent } from \"./store/store.component\";\n\n@Injectable()\nexport class StoreFirstGuard {\n    private firstNavigation = true;\n\n    constructor(private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): boolean {\n        if (this.firstNavigation) {\n            this.firstNavigation = false;\n            if (route.component != StoreComponent) {\n                this.router.navigateByUrl(\"/\");\n                return false;\n            }\n        }\n        return true;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://sports-store-m8wv.onrender.com'\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}