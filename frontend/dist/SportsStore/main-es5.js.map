{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/model/auth.service.ts","webpack:///src/app/model/cart.model.ts","webpack:///src/app/model/connection.service.ts","webpack:///src/app/model/model.module.ts","webpack:///src/app/model/order.model.ts","webpack:///src/app/model/order.repository.ts","webpack:///src/app/model/product.model.ts","webpack:///src/app/model/product.repository.ts","webpack:///src/app/model/rest.datasource.ts","webpack:///src/app/model/static.datasource.ts","webpack:///src/app/store/cartDetail.component.ts","webpack:///src/app/store/cartDetail.component.html","webpack:///src/app/store/cartSummary.component.ts","webpack:///src/app/store/cartSummary.component.html","webpack:///src/app/store/checkout.component.ts","webpack:///src/app/store/checkout.component.html","webpack:///src/app/store/counter.directive.ts","webpack:///src/app/store/store.component.ts","webpack:///src/app/store/store.component.html","webpack:///src/app/store/store.module.ts","webpack:///src/app/storeFirst.guard.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","template","AppModule","provide","useClass","forRoot","path","component","canActivate","loadChildren","m","AdminModule","redirectTo","register","enabled","production","imports","providers","declarations","bootstrap","AuthService","datasource","authenticate","username","password","auth_token","clear","Cart","lines","itemCount","cartPrice","addLine","product","quantity","line","find","undefined","push","CartLine","recalculate","updateQuantity","Number","removeLine","index","findIndex","splice","forEach","l","price","ConnectionService","connEvents","window","addEventListener","handleConnectionChange","event","next","connected","navigator","onLine","ModelModule","Order","cart","shipped","name","address","city","state","zip","country","OrderRepository","dataSource","orders","loaded","loadOrders","getOrders","subscribe","saveOrder","order","updateOrder","o","deleteOrder","Product","category","description","ProductRepository","products","categories","getProducts","data","map","p","filter","c","array","indexOf","sort","getProduct","getCategories","saveProduct","updateProduct","deleteProduct","PROTOCOL","PORT","RestDataSource","http","baseUrl","apiUrl","get","post","user","pass","pipe","response","success","token","getOptions","put","headers","StaticDataSource","console","log","JSON","stringify","CartDetailComponent","connection","Changes","templateUrl","CartSummaryComponent","CheckoutComponent","repository","orderSent","submitted","submitOrder","form","valid","styleUrls","CounterDirective","container","ngOnChanges","changes","i","counter","createEmbeddedView","CounterDirectiveContext","$implicit","StoreComponent","router","selectedCategory","productsPerPage","selectedPage","pageIndex","slice","changeCategory","newCategory","changePage","newPage","changePageSize","newSize","Math","ceil","length","addProductToCart","navigateByUrl","StoreModule","StoreFirstGuard","firstNavigation","route","environment","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from \"@angular/core\";\n\n@Component({\n    selector: \"app\",\n    template: \"<router-outlet></router-outlet>\"\n})\nexport class AppComponent { }\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { AppComponent } from \"./app.component\";\nimport { StoreModule } from \"./store/store.module\";\nimport { StoreComponent } from \"./store/store.component\";\nimport { CheckoutComponent } from \"./store/checkout.component\";\nimport { CartDetailComponent } from \"./store/cartDetail.component\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { StoreFirstGuard } from \"./storeFirst.guard\";\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\n\n@NgModule({\n    imports: [BrowserModule, StoreModule,\n        RouterModule.forRoot([\n            {\n                path: \"store\", component: StoreComponent,\n                canActivate: [StoreFirstGuard]\n            },\n            {\n                path: \"cart\", component: CartDetailComponent,\n                canActivate: [StoreFirstGuard]\n            },\n            {\n                path: \"checkout\", component: CheckoutComponent,\n                canActivate: [StoreFirstGuard]\n            },\n            {\n                path: \"admin\",\n                loadChildren: () => import(\"./admin/admin.module\")\n                    .then(m => m.AdminModule),\n                canActivate: [StoreFirstGuard]\n            },\n            { path: \"**\", redirectTo: \"/store\" }\n        ]),\n        ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })],\n    providers: [{ provide: LocationStrategy, useClass: HashLocationStrategy }, StoreFirstGuard],\n    declarations: [AppComponent],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { RestDataSource } from \"./rest.datasource\";\n\n@Injectable()\nexport class AuthService {\n\n    constructor(private datasource: RestDataSource) {}\n\n    authenticate(username: string, password: string): Observable<boolean> {\n        return this.datasource.authenticate(username, password);\n    }\n\n    get authenticated(): boolean {\n        return this.datasource.auth_token != null;\n    }\n\n    clear() {\n        this.datasource.auth_token = null;\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Product } from \"./product.model\";\n\n@Injectable()\nexport class Cart {\n    public lines: CartLine[] = [];\n    public itemCount: number = 0;\n    public cartPrice: number = 0;\n\n    addLine(product: Product, quantity: number = 1) {\n        let line = this.lines.find(line => line.product.id == product.id);\n        if (line != undefined) {\n            line.quantity += quantity;    \n        } else {\n            this.lines.push(new CartLine(product, quantity));\n        }\n        this.recalculate();\n    }\n\n    updateQuantity(product: Product, quantity: number) {\n        let line = this.lines.find(line => line.product.id == product.id);\n        if (line != undefined) {\n            line.quantity = Number(quantity);\n        }\n        this.recalculate();\n    }\n\n    removeLine(id: number) {\n        let index = this.lines.findIndex(line => line.product.id == id);\n        this.lines.splice(index, 1);\n        this.recalculate();\n    }\n\n    clear() {\n        this.lines = [];\n        this.itemCount = 0;\n        this.cartPrice = 0;\n    }\n\n    private recalculate() {\n        this.itemCount = 0;\n        this.cartPrice = 0;\n        this.lines.forEach(l => {\n            this.itemCount += l.quantity;\n            this.cartPrice += (l.quantity * l.product.price);\n        })\n    }\n}\n\nexport class CartLine {\n    \n    constructor(public product: Product,\n        public quantity: number) {}\n\n    get lineTotal() {\n        return this.quantity * this.product.price;\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\n@Injectable()\nexport class ConnectionService {\nprivate connEvents: Subject<boolean>;\nconstructor() {\nthis.connEvents = new Subject<boolean>();\nwindow.addEventListener(\"online\",\n(e) => this.handleConnectionChange(e));\nwindow.addEventListener(\"offline\",\n(e) => this.handleConnectionChange(e));\n}\nprivate handleConnectionChange(event) {\n    this.connEvents.next(this.connected);\n    }\n    get connected() : boolean {\n    return window.navigator.onLine;\n    }\n    get Changes(): Observable<boolean> {\n    return this.connEvents;\n    }\n    }","import { NgModule } from \"@angular/core\";\nimport { ProductRepository } from \"./product.repository\";\nimport { StaticDataSource } from \"./static.datasource\";\nimport { Cart } from \"./cart.model\";\nimport { Order } from \"./order.model\";\nimport { OrderRepository } from \"./order.repository\";\nimport { RestDataSource } from \"./rest.datasource\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AuthService } from \"./auth.service\";\nimport { ConnectionService } from \"./connection.service\";\n\n@NgModule({\n  imports: [HttpClientModule],\n  providers: [ProductRepository, Cart, Order, OrderRepository,\n    { provide: StaticDataSource, useClass: RestDataSource },\n    RestDataSource, AuthService, ConnectionService]\n})\nexport class ModelModule { }\n","import { Injectable } from \"@angular/core\";\nimport { Cart } from \"./cart.model\";\n\n@Injectable()\nexport class Order {\n    public id: number;\n    public name: string;\n    public address: string;\n    public city: string;\n    public state: string;\n    public zip: string;\n    public country: string;\n    public shipped: boolean = false;\n\n    constructor(public cart: Cart) { }\n\n    clear() {\n        this.id = null;\n        this.name = this.address = this.city = null;\n        this.state = this.zip = this.country = null;\n        this.shipped = false;\n        this.cart.clear();\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { Order } from \"./order.model\";\n//import { StaticDataSource } from \"./static.datasource\";\nimport { RestDataSource } from \"./rest.datasource\";\n\n@Injectable()\nexport class OrderRepository {\n    private orders: Order[] = [];\n    private loaded: boolean = false;\n\n    constructor(private dataSource: RestDataSource) { }\n\n    loadOrders() {\n        this.loaded = true;\n        this.dataSource.getOrders()\n            .subscribe(orders => this.orders = orders);\n    }\n\n    getOrders(): Order[] {\n        if (!this.loaded) {\n            this.loadOrders();\n        }\n        return this.orders;\n    }\n\n    saveOrder(order: Order): Observable<Order> {\n        return this.dataSource.saveOrder(order);\n    }\n\n    updateOrder(order: Order) {\n        this.dataSource.updateOrder(order).subscribe(order => {\n            this.orders.splice(this.orders.\n                findIndex(o => o.id == order.id), 1, order);\n        });\n    }\n\n    deleteOrder(id: number) {\n        this.dataSource.deleteOrder(id).subscribe(order => {\n            this.orders.splice(this.orders.findIndex(o => id == o.id), 1);\n        });\n    }\n}\n","export class Product {\n\n    constructor(\n        public id?: number,\n        public name?: string,\n        public category?: string,\n        public description?: string,\n        public price?: number) { }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Product } from \"./product.model\";\n//import { StaticDataSource } from \"./static.datasource\";\nimport { RestDataSource } from \"./rest.datasource\";\n\n@Injectable()\nexport class ProductRepository {\n    private products: Product[] = [];\n    private categories: string[] = [];\n\n    constructor(private dataSource: RestDataSource) {\n        dataSource.getProducts().subscribe(data => {\n            this.products = data;\n            this.categories = data.map(p => p.category)\n                .filter((c, index, array) => array.indexOf(c) == index).sort();\n        });\n    }\n\n    getProducts(category: string = null): Product[] {\n        return this.products\n            .filter(p => category == null || category == p.category);\n    }\n\n    getProduct(id: number): Product {\n        return this.products.find(p => p.id == id);\n    }\n\n    getCategories(): string[] {\n        return this.categories;\n    }\n\n    saveProduct(product: Product) {\n        if (product.id == null || product.id == 0) {\n            this.dataSource.saveProduct(product)\n                .subscribe(p => this.products.push(p));\n        } else {\n            this.dataSource.updateProduct(product)\n                .subscribe(p => {\n                    this.products.splice(this.products.\n                        findIndex(p => p.id == product.id), 1, product);\n                });\n        }\n    }\n\n    deleteProduct(id: number) {\n        this.dataSource.deleteProduct(id).subscribe(p => {\n            this.products.splice(this.products.\n                findIndex(p => p.id == id), 1);\n        })\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Product } from \"./product.model\";\nimport { Cart } from \"./cart.model\";\nimport { Order } from \"./order.model\";\nimport { map } from \"rxjs/operators\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n\n\nconst PROTOCOL = \"http\";\nconst PORT = 3500;\n\n@Injectable()\nexport class RestDataSource {\n    baseUrl: string;\n    auth_token: string;\n\n    constructor(private http: HttpClient) {\n        this.baseUrl = `${environment.apiUrl}/`;\n// this.baseUrl = \"/api/\"\n    }\n\n    getProducts(): Observable<Product[]> {\n        return this.http.get<Product[]>(this.baseUrl + \"products\");\n    }\n\n    saveOrder(order: Order): Observable<Order> {\n        return this.http.post<Order>(this.baseUrl + \"orders\", order);\n    }\n\n    authenticate(user: string, pass: string): Observable<boolean> {\n        return this.http.post<any>(this.baseUrl + \"login\", {\n            name: user, password: pass\n        }).pipe(map(response => {\n            this.auth_token = response.success ? response.token : null;\n            return response.success;\n        }));\n    }\n\n    saveProduct(product: Product): Observable<Product> {\n        return this.http.post<Product>(this.baseUrl + \"products\",\n            product, this.getOptions());\n    }\n\n    updateProduct(product): Observable<Product> {\n        return this.http.put<Product>(`${this.baseUrl}products/${product.id}`,\n            product, this.getOptions());\n    }\n\n    deleteProduct(id: number): Observable<Product> {\n        return this.http.delete<Product>(`${this.baseUrl}products/${id}`,\n            this.getOptions());\n    }\n\n    getOrders(): Observable<Order[]> {\n        return this.http.get<Order[]>(this.baseUrl + \"orders\", this.getOptions());\n    }\n\n    deleteOrder(id: number): Observable<Order> {\n        return this.http.delete<Order>(`${this.baseUrl}orders/${id}`,\n            this.getOptions());\n    }\n\n    updateOrder(order: Order): Observable<Order> {\n        return this.http.put<Order>(`${this.baseUrl}orders/${order.id}`,\n            order, this.getOptions());\n    }\n\n    private getOptions() {\n        return {\n            headers: new HttpHeaders({\n                \"Authorization\": `Bearer ${this.auth_token}`\n            })\n        }\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Product } from \"./product.model\";\nimport { Observable, from } from \"rxjs\";\nimport { Order } from \"./order.model\";\n\n@Injectable()\nexport class StaticDataSource {\n    private products: Product[] = [\n        new Product(1, \"Product 1\", \"Category 1\", \"Product 1 (Category 1)\", 100),\n        new Product(2, \"Product 2\", \"Category 1\", \"Product 2 (Category 1)\", 100),\n        new Product(3, \"Product 3\", \"Category 1\", \"Product 3 (Category 1)\", 100),\n        new Product(4, \"Product 4\", \"Category 1\", \"Product 4 (Category 1)\", 100),\n        new Product(5, \"Product 5\", \"Category 1\", \"Product 5 (Category 1)\", 100),\n        new Product(6, \"Product 6\", \"Category 2\", \"Product 6 (Category 2)\", 100),\n        new Product(7, \"Product 7\", \"Category 2\", \"Product 7 (Category 2)\", 100),\n        new Product(8, \"Product 8\", \"Category 2\", \"Product 8 (Category 2)\", 100),\n        new Product(9, \"Product 9\", \"Category 2\", \"Product 9 (Category 2)\", 100),\n        new Product(10, \"Product 10\", \"Category 2\", \"Product 10 (Category 2)\", 100),\n        new Product(11, \"Product 11\", \"Category 3\", \"Product 11 (Category 3)\", 100),\n        new Product(12, \"Product 12\", \"Category 3\", \"Product 12 (Category 3)\", 100),\n        new Product(13, \"Product 13\", \"Category 3\", \"Product 13 (Category 3)\", 100),\n        new Product(14, \"Product 14\", \"Category 3\", \"Product 14 (Category 3)\", 100),\n        new Product(15, \"Product 15\", \"Category 3\", \"Product 15 (Category 3)\", 100),\n    ];\n\n    getProducts(): Observable<Product[]> {\n        return from([this.products]);\n    }\n\n    saveOrder(order: Order): Observable<Order> {\n        console.log(JSON.stringify(order));\n        return from([order]);\n    }\n}\n","import { Component } from \"@angular/core\";\nimport { Cart } from \"../model/cart.model\";\nimport { ConnectionService } from \"../model/connection.service\";\n\n@Component({\n    templateUrl: \"cartDetail.component.html\"\n})\nexport class CartDetailComponent {\n\n    public connected: boolean = true;\nconstructor(public cart: Cart, private connection: ConnectionService) {\nthis.connected = this.connection.connected;\nconnection.Changes.subscribe((state) => this.connected = state);\n }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col bg-dark text-white\">\n        <a class=\"navbar-brand\"> SPORTS STORE</a>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col mt-2\">\n        <h2 class=\"text-center\">Your Cart</h2>\n        <table class=\"table table-bordered table-striped p-2\">\n          <thead>\n            <tr>\n              <th>Quantity</th>\n              <th>Product</th>\n              <th class=\"text-right\">Price</th>\n              <th class=\"text-right\">Subtotal</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngIf=\"cart.lines.length == 0\">\n              <td colspan=\"4\" class=\"text-center\">\n                Your cart is empty\n              </td>\n            </tr>\n            <tr *ngFor=\"let line of cart.lines\">\n              <td>\n                <input type=\"number\" class=\"form-control-sm\"\n                       style=\"width:5em\"\n                       [value]=\"line.quantity\"\n                       (change)=\"cart.updateQuantity(line.product,\n                                  $event.target.value)\" />\n              </td>\n              <td>{{line.product.name}}</td>\n              <td class=\"text-right\">\n                  {{line.product.price | currency:\"USD\":\"symbol\":\"2.2-2\"}}\n              </td>\n              <td class=\"text-right\">\n                  {{(line.lineTotal) | currency:\"USD\":\"symbol\":\"2.2-2\" }}\n              </td>\n              <td class=\"text-center\">\n                <button class=\"btn btn-sm btn-danger\"\n                        (click)=\"cart.removeLine(line.product.id)\">\n                  Remove\n                </button>\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colspan=\"3\" class=\"text-right\">Total:</td>\n              <td class=\"text-right\">\n                {{cart.cartPrice | currency:\"USD\":\"symbol\":\"2.2-2\"}}\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col\">\n      <div class=\"text-center\">\n        <button class=\"btn btn-primary m-1\" routerLink=\"/store\">\n            Continue Shopping\n        </button>\n        <button class=\"btn btn-secondary m-1\" routerLink=\"/checkout\"\n        [disabled]=\"cart.lines.length == 0 || !connected\">\n        {{ connected ? 'Checkout' : 'Offline' }}\n        </button>\n      </div>\n    </div>\n  </div>\n  ","import { Component } from \"@angular/core\";\nimport { Cart } from \"../model/cart.model\";\n\n@Component({\n    selector: \"cart-summary\",\n    templateUrl: \"cartSummary.component.html\"\n})\nexport class CartSummaryComponent {\n\n    constructor(public cart: Cart) { }\n}\n","<div class=\"float-right\">\n    <small>\n      Your cart:\n      <span *ngIf=\"cart.itemCount > 0\">\n        {{ cart.itemCount }} item(s)\n        {{ cart.cartPrice | currency:\"USD\":\"symbol\":\"2.2-2\" }}\n      </span>\n      <span *ngIf=\"cart.itemCount == 0\">\n        (empty)\n      </span>\n    </small>\n    <button class=\"btn btn-sm bg-dark text-white\"\n        [disabled]=\"cart.itemCount == 0\" routerLink=\"/cart\">\n      <i class=\"fa fa-shopping-cart\"></i>\n    </button>\n  </div>\n  ","import { Component } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { OrderRepository } from \"../model/order.repository\";\nimport { Order } from \"../model/order.model\";\n\n@Component({\n    templateUrl: \"checkout.component.html\",\n    styleUrls: [\"checkout.component.css\"]\n})\nexport class CheckoutComponent {\n    orderSent: boolean = false;\n    submitted: boolean = false;\n\n    constructor(public repository: OrderRepository,\n                public order: Order) {}\n\n    submitOrder(form: NgForm) {\n        this.submitted = true;\n        if (form.valid) {\n            this.repository.saveOrder(this.order).subscribe(order => {\n                this.order.clear();\n                this.orderSent = true;\n                this.submitted = false;\n            });\n        }\n    }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col bg-dark text-white\">\n        <a class=\"navbar-brand\">SPORTS STORE</a>\n      </div>\n    </div>\n  </div>\n  \n  <div *ngIf=\"orderSent\" class=\"m-2 text-center\">\n    <h2>Thanks!</h2>\n    <p>Thanks for placing your order.</p>\n    <p>We'll ship your goods as soon as possible.</p>\n    <button class=\"btn btn-primary\" routerLink=\"/store\">Return to Store</button>\n  </div>\n  <form *ngIf=\"!orderSent\" #form=\"ngForm\" novalidate\n        (ngSubmit)=\"submitOrder(form)\" class=\"m-2\">\n    <div class=\"form-group\">\n      <label>Name</label>\n      <input class=\"form-control\" #name=\"ngModel\" name=\"name\"\n              [(ngModel)]=\"order.name\" required />\n      <span *ngIf=\"submitted && name.invalid\" class=\"text-danger\">\n        Please enter your name\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label>Address</label>\n      <input class=\"form-control\" #address=\"ngModel\" name=\"address\"\n              [(ngModel)]=\"order.address\" required />\n      <span *ngIf=\"submitted && address.invalid\" class=\"text-danger\">\n        Please enter your address\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label>City</label>\n      <input class=\"form-control\" #city=\"ngModel\" name=\"city\"\n              [(ngModel)]=\"order.city\" required />\n      <span *ngIf=\"submitted && city.invalid\" class=\"text-danger\">\n        Please enter your city\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label>State</label>\n      <input class=\"form-control\" #state=\"ngModel\" name=\"state\"\n              [(ngModel)]=\"order.state\" required />\n      <span *ngIf=\"submitted && state.invalid\" class=\"text-danger\">\n        Please enter your state\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label>Zip/Postal Code</label>\n      <input class=\"form-control\" #zip=\"ngModel\" name=\"zip\"\n              [(ngModel)]=\"order.zip\" required />\n      <span *ngIf=\"submitted && zip.invalid\" class=\"text-danger\">\n        Please enter your zip/postal code\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label>Country</label>\n      <input class=\"form-control\" #country=\"ngModel\" name=\"country\"\n              [(ngModel)]=\"order.country\" required />\n      <span *ngIf=\"submitted && country.invalid\" class=\"text-danger\">\n        Please enter your country\n      </span>\n    </div>\n    <div class=\"text-center\">\n      <button class=\"btn btn-secondary m-1\" routerLink=\"/cart\">Back</button>\n      <button class=\"btn btn-primary m-1\" type=\"submit\">Complete Order</button>\n    </div>\n  </form>\n  ","import {\n    Directive, ViewContainerRef, TemplateRef, Input, Attribute, SimpleChanges\n} from \"@angular/core\";\n\n@Directive({\n    selector: \"[counterOf]\"\n})\nexport class CounterDirective {\n\n    constructor(private container: ViewContainerRef,\n        private template: TemplateRef<Object>) {\n    }\n\n    @Input(\"counterOf\")\n    counter: number;\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.container.clear();\n        for (let i = 0; i < this.counter; i++) {\n            this.container.createEmbeddedView(this.template,\n                new CounterDirectiveContext(i + 1));\n        }\n    }\n}\n\nclass CounterDirectiveContext {\n    constructor(public $implicit: any) { }\n}\n","import { Component } from \"@angular/core\";\nimport { Product } from \"../model/product.model\";\nimport { ProductRepository } from \"../model/product.repository\";\nimport { Cart } from \"../model/cart.model\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n    selector: \"store\",\n    templateUrl: \"store.component.html\"\n})\nexport class StoreComponent {\n    public selectedCategory = null;\n    public productsPerPage = 4;\n    public selectedPage = 1;\n\n    constructor(private repository: ProductRepository,\n        private cart: Cart,\n        private router: Router) { }\n\n    get products(): Product[] {\n        let pageIndex = (this.selectedPage - 1) * this.productsPerPage\n        return this.repository.getProducts(this.selectedCategory)\n            .slice(pageIndex, pageIndex + this.productsPerPage);\n    }\n\n    get categories(): string[] {\n        return this.repository.getCategories();\n    }\n\n    changeCategory(newCategory?: string) {\n        this.selectedCategory = newCategory;\n    }\n\n    changePage(newPage: number) {\n        this.selectedPage = newPage;\n    }\n\n    changePageSize(newSize: number) {\n        this.productsPerPage = Number(newSize);\n        this.changePage(1);\n    }\n\n    get pageCount(): number {\n        return Math.ceil(this.repository\n            .getProducts(this.selectedCategory).length / this.productsPerPage)\n    }\n\n    addProductToCart(product: Product) {\n        this.cart.addLine(product);\n        this.router.navigateByUrl(\"/cart\");\n    }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col bg-dark text-white\">\n        <a class=\"navbar-brand\"> FAROUK'S SPORTS STORE</a>\n        <cart-summary></cart-summary>\n      </div>\n    </div>\n    <div class=\"row\">\n  \n      <div class=\"col-3 p-2\">\n        <button class=\"btn btn-block btn-outline-primary\" (click)=\"changeCategory()\">\n          Home\n        </button>\n        <button *ngFor=\"let cat of categories\" \n            class=\"btn btn-outline-primary btn-block\"\n            [class.active]=\"cat == selectedCategory\" (click)=\"changeCategory(cat)\">\n          {{cat}}\n        </button>\n        <button class=\"btn btn-block btn-danger mt-5\" routerLink=\"/admin\">\n            Admin\n          </button>    \n      </div>\n  \n      <div class=\"col-9 p-2\">\n        <div *ngFor=\"let product of products\" class=\"card m-1 p-1 bg-light\">\n          <h4>\n            {{product.name}}\n            <span class=\"badge badge-pill badge-primary float-right\">\n              {{ product.price | currency:\"USD\":\"symbol\":\"2.2-2\" }}\n            </span>\n          </h4>\n          <div class=\"card-text bg-white p-1\">\n            {{product.description}}\n            <button class=\"btn btn-success btn-sm float-right\"\n                    (click)=\"addProductToCart(product)\">\n              Add To Cart\n            </button>\n          </div>\n        </div>\n  \n        <div class=\"form-inline float-left mr-1\">\n          <select class=\"form-control\" [value]=\"productsPerPage\"\n                  (change)=\"changePageSize($event.target.value)\">\n            <option value=\"3\">3 per Page</option>\n            <option value=\"4\">4 per Page</option>\n            <option value=\"6\">6 per Page</option>\n            <option value=\"8\">8 per Page</option>\n          </select>\n        </div>\n  \n        <div class=\"btn-group float-right\">\n          <button *counter=\"let page of pageCount\" (click)=\"changePage(page)\"\n              class=\"btn btn-outline-primary\" [class.active]=\"page == selectedPage\">\n            {{page}}\n          </button>\n        </div>\n  \n      </div>\n    </div>\n  </div>\n  ","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { FormsModule } from \"@angular/forms\";\nimport { ModelModule } from \"../model/model.module\";\nimport { StoreComponent } from \"./store.component\";\nimport { CounterDirective } from \"./counter.directive\";\nimport { CartSummaryComponent } from \"./cartSummary.component\";\nimport { CartDetailComponent } from \"./cartDetail.component\";\nimport { CheckoutComponent } from \"./checkout.component\";\nimport { RouterModule } from \"@angular/router\";\n\n@NgModule({\n    imports: [ModelModule, BrowserModule, FormsModule, RouterModule],\n    declarations: [StoreComponent, CounterDirective, CartSummaryComponent,\n        CartDetailComponent, CheckoutComponent],\n    exports: [StoreComponent, CartDetailComponent, CheckoutComponent]\n})\nexport class StoreModule { }\n","import { Injectable } from \"@angular/core\";\nimport {\n    ActivatedRouteSnapshot, RouterStateSnapshot,\n    Router\n} from \"@angular/router\";\nimport { StoreComponent } from \"./store/store.component\";\n\n@Injectable()\nexport class StoreFirstGuard {\n    private firstNavigation = true;\n\n    constructor(private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): boolean {\n        if (this.firstNavigation) {\n            this.firstNavigation = false;\n            if (route.component != StoreComponent) {\n                this.router.navigateByUrl(\"/\");\n                return false;\n            }\n        }\n        return true;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://sports-store-m8wv.onrender.com'\n};\n\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}