{"version":3,"sources":["webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/auth.component.ts","webpack:///src/app/admin/auth.component.html","webpack:///src/app/admin/auth.guard.ts","webpack:///src/app/admin/orderTable.component.ts","webpack:///src/app/admin/orderTable.component.html","webpack:///src/app/admin/productEditor.component.ts","webpack:///src/app/admin/productEditor.component.html","webpack:///src/app/admin/productTable.component.ts","webpack:///src/app/admin/productTable.component.html"],"names":["AdminComponent","auth","router","logout","clear","navigateByUrl","templateUrl","routing","forChild","path","component","canActivate","children","redirectTo","AdminModule","imports","providers","declarations","AuthComponent","authenticate","form","valid","username","password","subscribe","response","errorMessage","AuthGuard","route","state","authenticated","OrderTableComponent","repository","includeShipped","getOrders","filter","o","shipped","markShipped","order","updateOrder","delete","id","deleteOrder","ProductEditorComponent","activeRoute","editing","product","snapshot","params","Object","assign","getProduct","save","saveProduct","ProductTableComponent","getProducts","deleteProduct"],"mappings":"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","file":"admin-admin-module-es5.js","sourcesContent":["import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../model/auth.service\";\n\n@Component({\n    templateUrl: \"admin.component.html\"\n})\nexport class AdminComponent {\n\n    constructor(private auth: AuthService,\n                private router: Router) { }\n\n    logout() {\n        this.auth.clear();\n        this.router.navigateByUrl(\"/\");\n    }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col bg-dark text-white\">\n            <a class=\"navbar-brand\">SPORTS STORE</a>\n        </div>\n    </div>\n    <div class=\"row mt-2\">\n        <div class=\"col-3\">\n            <button class=\"btn btn-outline-info btn-block\"\n                    routerLink=\"/admin/main/products\"\n                    routerLinkActive=\"active\">\n                Products\n            </button>\n            <button class=\"btn btn-outline-info btn-block\"\n                    routerLink=\"/admin/main/orders\"\n                    routerLinkActive=\"active\">\n                Orders\n            </button>\n            <button class=\"btn btn-outline-danger btn-block\" (click)=\"logout()\">\n                Logout\n            </button>\n        </div>\n        <div class=\"col-9\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { AuthComponent } from \"./auth.component\";\nimport { AdminComponent } from \"./admin.component\";\nimport { AuthGuard } from \"./auth.guard\";\nimport { ProductTableComponent } from \"./productTable.component\";\nimport { ProductEditorComponent } from \"./productEditor.component\";\nimport { OrderTableComponent } from \"./orderTable.component\";\n\nlet routing = RouterModule.forChild([\n    { path: \"auth\", component: AuthComponent },\n    {\n        path: \"main\", component: AdminComponent, canActivate: [AuthGuard],\n        children: [\n            { path: \"products/:mode/:id\", component: ProductEditorComponent },\n            { path: \"products/:mode\", component: ProductEditorComponent },\n            { path: \"products\", component: ProductTableComponent },\n            { path: \"orders\", component: OrderTableComponent },\n            { path: \"**\", redirectTo: \"products\" }\n        ]\n    },\n    { path: \"**\", redirectTo: \"auth\" }\n]);\n\n@NgModule({\n    imports: [CommonModule, FormsModule, routing],\n    providers: [AuthGuard],\n    declarations: [AuthComponent, AdminComponent,\n        ProductTableComponent, ProductEditorComponent, OrderTableComponent]\n})\nexport class AdminModule {}\n","import { Component } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../model/auth.service\";\n\n@Component({\n    templateUrl: \"auth.component.html\"\n})\nexport class AuthComponent {\n    public username: string;\n    public password: string;\n    public errorMessage: string;\n\n    constructor(private router: Router,\n                private auth: AuthService) { }\n\n    authenticate(form: NgForm) {\n        if (form.valid) {\n            this.auth.authenticate(this.username, this.password)\n                .subscribe(response => {\n                    if (response) {\n                        this.router.navigateByUrl(\"/admin/main\");\n                    }\n                    this.errorMessage = \"Authentication Failed\";\n                })\n        } else {\n            this.errorMessage = \"Form Data Invalid\";\n        }\n    }\n}\n","<div class=\"bg-info p-2 text-center text-white\">\n    <h3>SportsStore Admin</h3>\n  </div>\n  <div class=\"bg-danger mt-2 p-2 text-center text-white\"\n       *ngIf=\"errorMessage != null\">\n    {{errorMessage}}\n  </div>\n  <div class=\"p-2\">\n    <form novalidate #form=\"ngForm\" (ngSubmit)=\"authenticate(form)\">\n      <div class=\"form-group\">\n        <label>Name</label>\n        <input class=\"form-control\" name=\"username\"\n               [(ngModel)]=\"username\" required />\n      </div>\n      <div class=\"form-group\">\n        <label>Password</label>\n        <input class=\"form-control\" type=\"password\" name=\"password\"\n               [(ngModel)]=\"password\" required />\n      </div>\n      <div class=\"text-center\">\n        <button class=\"btn btn-secondary m-1\" routerLink=\"/\">Go back</button>\n        <button class=\"btn btn-primary m-1\" type=\"submit\">Log In</button>\n      </div>\n    </form>\n  </div>\n  ","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, RouterStateSnapshot,\n            Router } from \"@angular/router\";\nimport { AuthService } from \"../model/auth.service\";\n\n@Injectable()\nexport class AuthGuard {\n\n    constructor(private router: Router,\n                private auth: AuthService) { }\n\n    canActivate(route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): boolean {\n\n        if (!this.auth.authenticated) {\n            this.router.navigateByUrl(\"/admin/auth\");\n            return false;\n        } \n        return true;\n    }\n}\n","import { Component } from \"@angular/core\";\nimport { Order } from \"../model/order.model\";\nimport { OrderRepository } from \"../model/order.repository\";\n\n@Component({\n    templateUrl: \"orderTable.component.html\"\n})\nexport class OrderTableComponent {\n    includeShipped = false;\n\n    constructor(private repository: OrderRepository) {}\n\n    getOrders(): Order[] {\n        return this.repository.getOrders()\n            .filter(o => this.includeShipped || !o.shipped);\n    }\n \n    markShipped(order: Order) {\n        order.shipped = true;\n        this.repository.updateOrder(order);\n    }\n\n    delete(id: number) {\n        this.repository.deleteOrder(id);\n    }\n}\n","<div class=\"form-check\">\n    <label class=\"form-check-label\">\n    <input type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"includeShipped\"/>        \n        Display Shipped Orders\n    </label>\n</div>\n<table class=\"table table-sm\">\n    <thead>\n        <tr><th>Name</th><th>Zip</th><th colspan=\"2\">Cart</th><th></th></tr>\n    </thead>\n    <tbody>\n        <tr *ngIf=\"getOrders().length == 0\">\n            <td colspan=\"5\">There are no orders</td>\n        </tr>\n        <ng-template ngFor let-o [ngForOf]=\"getOrders()\">\n            <tr>\n                <td>{{o.name}}</td><td>{{o.zip}}</td>\n                <th>Product</th><th>Quantity</th>\n                <td>\n                    <button class=\"btn btn-warning m-1\" (click)=\"markShipped(o)\">\n                        Ship\n                    </button>\n                    <button class=\"btn btn-danger\" (click)=\"delete(o.id)\">\n                        Delete\n                    </button>\n                </td>\n            </tr>\n            <tr *ngFor=\"let line of o.cart.lines\">\n                <td colspan=\"2\"></td>\n                <td>{{line.product.name}}</td>\n                <td>{{line.quantity}}</td>\n            </tr>\n        </ng-template>\n    </tbody>\n</table>\n","import { Component } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { NgForm } from \"@angular/forms\";\nimport { Product } from \"../model/product.model\";\nimport { ProductRepository } from \"../model/product.repository\";\n\n@Component({\n    templateUrl: \"productEditor.component.html\"\n})\nexport class ProductEditorComponent {\n    editing: boolean = false;\n    product: Product = new Product();\n\n    constructor(private repository: ProductRepository,\n                private router: Router,\n                activeRoute: ActivatedRoute) {\n\n        this.editing = activeRoute.snapshot.params[\"mode\"] == \"edit\";\n        if (this.editing) {\n            Object.assign(this.product,\n                repository.getProduct(activeRoute.snapshot.params[\"id\"]));\n        }\n    }\n\n    save(form: NgForm) {\n        this.repository.saveProduct(this.product);\n        this.router.navigateByUrl(\"/admin/main/products\");\n    }\n}\n","<div class=\"bg-primary p-2 text-white\" [class.bg-warning]=\"editing\"\n     [class.text-dark]=\"editing\">\n    <h5>{{editing  ? \"Edit\" : \"Create\"}} Product</h5>\n</div>\n<form novalidate #form=\"ngForm\" (ngSubmit)=\"save(form)\">\n    <div class=\"form-group\">\n        <label>Name</label>\n        <input class=\"form-control\" name=\"name\" [(ngModel)]=\"product.name\" />\n    </div>\n    <div class=\"form-group\">\n        <label>Category</label>\n        <input class=\"form-control\" name=\"category\" [(ngModel)]=\"product.category\" />\n    </div>\n    <div class=\"form-group\">\n        <label>Description</label>\n        <textarea class=\"form-control\" name=\"description\"\n                  [(ngModel)]=\"product.description\">\n        </textarea>\n    </div>\n    <div class=\"form-group\">\n        <label>Price</label>\n        <input class=\"form-control\" name=\"price\" [(ngModel)]=\"product.price\" />\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary m-1\" [class.btn-warning]=\"editing\">\n        {{editing ? \"Save\" : \"Create\"}}\n    </button>\n    <button type=\"reset\" class=\"btn btn-secondary\" routerLink=\"/admin/main/products\">\n        Cancel\n    </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Product } from \"../model/product.model\";\nimport { ProductRepository } from \"../model/product.repository\";\n\n@Component({\n    templateUrl: \"productTable.component.html\"\n})\nexport class ProductTableComponent {\n\n    constructor(private repository: ProductRepository) { }\n\n    getProducts(): Product[] {\n        return this.repository.getProducts();\n    }\n\n    deleteProduct(id: number) {\n        this.repository.deleteProduct(id);\n    }\n}\n","<table class=\"table table-sm table-striped\">\n    <thead>\n        <tr>\n            <th>ID</th><th>Name</th><th>Category</th><th>Price</th>\n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let p of getProducts()\">\n            <td>{{p.id}}</td>\n            <td>{{p.name}}</td>\n            <td>{{p.category}}</td>\n            <td>{{p.price | currency:\"USD\":\"symbol\":\"2.2-2\"}}</td>\n            <td>\n                <button class=\"btn btn-sm btn-warning m-1\"\n                        [routerLink]=\"['/admin/main/products/edit', p.id]\">\n                    Edit\n                </button>\n                <button class=\"btn btn-sm btn-danger\" (click)=\"deleteProduct(p.id)\">\n                    Delete\n                </button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<button class=\"btn btn-primary\" routerLink=\"/admin/main/products/create\">\n    Create New Product\n</button>\n"]}