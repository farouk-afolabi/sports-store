{"version":3,"sources":["./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.module.ts","./src/app/admin/auth.component.ts","./src/app/admin/auth.component.html","./src/app/admin/auth.guard.ts","./src/app/admin/orderTable.component.ts","./src/app/admin/orderTable.component.html","./src/app/admin/productEditor.component.ts","./src/app/admin/productEditor.component.html","./src/app/admin/productTable.component.ts","./src/app/admin/productTable.component.html"],"names":[],"mappings":"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","file":"admin-admin-module-es2015.js","sourcesContent":["import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../model/auth.service\";\n\n@Component({\n    templateUrl: \"admin.component.html\"\n})\nexport class AdminComponent {\n\n    constructor(private auth: AuthService,\n                private router: Router) { }\n\n    logout() {\n        this.auth.clear();\n        this.router.navigateByUrl(\"/\");\n    }\n}\n","<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col bg-dark text-white\">\n            <a class=\"navbar-brand\">SPORTS STORE</a>\n        </div>\n    </div>\n    <div class=\"row mt-2\">\n        <div class=\"col-3\">\n            <button class=\"btn btn-outline-info btn-block\"\n                    routerLink=\"/admin/main/products\"\n                    routerLinkActive=\"active\">\n                Products\n            </button>\n            <button class=\"btn btn-outline-info btn-block\"\n                    routerLink=\"/admin/main/orders\"\n                    routerLinkActive=\"active\">\n                Orders\n            </button>\n            <button class=\"btn btn-outline-danger btn-block\" (click)=\"logout()\">\n                Logout\n            </button>\n        </div>\n        <div class=\"col-9\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { AuthComponent } from \"./auth.component\";\nimport { AdminComponent } from \"./admin.component\";\nimport { AuthGuard } from \"./auth.guard\";\nimport { ProductTableComponent } from \"./productTable.component\";\nimport { ProductEditorComponent } from \"./productEditor.component\";\nimport { OrderTableComponent } from \"./orderTable.component\";\n\nlet routing = RouterModule.forChild([\n    { path: \"auth\", component: AuthComponent },\n    {\n        path: \"main\", component: AdminComponent, canActivate: [AuthGuard],\n        children: [\n            { path: \"products/:mode/:id\", component: ProductEditorComponent },\n            { path: \"products/:mode\", component: ProductEditorComponent },\n            { path: \"products\", component: ProductTableComponent },\n            { path: \"orders\", component: OrderTableComponent },\n            { path: \"**\", redirectTo: \"products\" }\n        ]\n    },\n    { path: \"**\", redirectTo: \"auth\" }\n]);\n\n@NgModule({\n    imports: [CommonModule, FormsModule, routing],\n    providers: [AuthGuard],\n    declarations: [AuthComponent, AdminComponent,\n        ProductTableComponent, ProductEditorComponent, OrderTableComponent]\n})\nexport class AdminModule {}\n","import { Component } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../model/auth.service\";\n\n@Component({\n    templateUrl: \"auth.component.html\"\n})\nexport class AuthComponent {\n    public username: string;\n    public password: string;\n    public errorMessage: string;\n\n    constructor(private router: Router,\n                private auth: AuthService) { }\n\n    authenticate(form: NgForm) {\n        if (form.valid) {\n            this.auth.authenticate(this.username, this.password)\n                .subscribe(response => {\n                    if (response) {\n                        this.router.navigateByUrl(\"/admin/main\");\n                    }\n                    this.errorMessage = \"Authentication Failed\";\n                })\n        } else {\n            this.errorMessage = \"Form Data Invalid\";\n        }\n    }\n}\n","<div class=\"bg-info p-2 text-center text-white\">\n    <h3>SportsStore Admin</h3>\n  </div>\n  <div class=\"bg-danger mt-2 p-2 text-center text-white\"\n       *ngIf=\"errorMessage != null\">\n    {{errorMessage}}\n  </div>\n  <div class=\"p-2\">\n    <form novalidate #form=\"ngForm\" (ngSubmit)=\"authenticate(form)\">\n      <div class=\"form-group\">\n        <label>Name</label>\n        <input class=\"form-control\" name=\"username\"\n               [(ngModel)]=\"username\" required />\n      </div>\n      <div class=\"form-group\">\n        <label>Password</label>\n        <input class=\"form-control\" type=\"password\" name=\"password\"\n               [(ngModel)]=\"password\" required />\n      </div>\n      <div class=\"text-center\">\n        <button class=\"btn btn-secondary m-1\" routerLink=\"/\">Go back</button>\n        <button class=\"btn btn-primary m-1\" type=\"submit\">Log In</button>\n      </div>\n    </form>\n  </div>\n  ","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, RouterStateSnapshot,\n            Router } from \"@angular/router\";\nimport { AuthService } from \"../model/auth.service\";\n\n@Injectable()\nexport class AuthGuard {\n\n    constructor(private router: Router,\n                private auth: AuthService) { }\n\n    canActivate(route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): boolean {\n\n        if (!this.auth.authenticated) {\n            this.router.navigateByUrl(\"/admin/auth\");\n            return false;\n        } \n        return true;\n    }\n}\n","import { Component } from \"@angular/core\";\nimport { Order } from \"../model/order.model\";\nimport { OrderRepository } from \"../model/order.repository\";\n\n@Component({\n    templateUrl: \"orderTable.component.html\"\n})\nexport class OrderTableComponent {\n    includeShipped = false;\n\n    constructor(private repository: OrderRepository) {}\n\n    getOrders(): Order[] {\n        return this.repository.getOrders()\n            .filter(o => this.includeShipped || !o.shipped);\n    }\n \n    markShipped(order: Order) {\n        order.shipped = true;\n        this.repository.updateOrder(order);\n    }\n\n    delete(id: number) {\n        this.repository.deleteOrder(id);\n    }\n}\n","<div class=\"form-check\">\n    <label class=\"form-check-label\">\n    <input type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"includeShipped\"/>        \n        Display Shipped Orders\n    </label>\n</div>\n<table class=\"table table-sm\">\n    <thead>\n        <tr><th>Name</th><th>Zip</th><th colspan=\"2\">Cart</th><th></th></tr>\n    </thead>\n    <tbody>\n        <tr *ngIf=\"getOrders().length == 0\">\n            <td colspan=\"5\">There are no orders</td>\n        </tr>\n        <ng-template ngFor let-o [ngForOf]=\"getOrders()\">\n            <tr>\n                <td>{{o.name}}</td><td>{{o.zip}}</td>\n                <th>Product</th><th>Quantity</th>\n                <td>\n                    <button class=\"btn btn-warning m-1\" (click)=\"markShipped(o)\">\n                        Ship\n                    </button>\n                    <button class=\"btn btn-danger\" (click)=\"delete(o.id)\">\n                        Delete\n                    </button>\n                </td>\n            </tr>\n            <tr *ngFor=\"let line of o.cart.lines\">\n                <td colspan=\"2\"></td>\n                <td>{{line.product.name}}</td>\n                <td>{{line.quantity}}</td>\n            </tr>\n        </ng-template>\n    </tbody>\n</table>\n","import { Component } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { NgForm } from \"@angular/forms\";\nimport { Product } from \"../model/product.model\";\nimport { ProductRepository } from \"../model/product.repository\";\n\n@Component({\n    templateUrl: \"productEditor.component.html\"\n})\nexport class ProductEditorComponent {\n    editing: boolean = false;\n    product: Product = new Product();\n\n    constructor(private repository: ProductRepository,\n                private router: Router,\n                activeRoute: ActivatedRoute) {\n\n        this.editing = activeRoute.snapshot.params[\"mode\"] == \"edit\";\n        if (this.editing) {\n            Object.assign(this.product,\n                repository.getProduct(activeRoute.snapshot.params[\"id\"]));\n        }\n    }\n\n    save(form: NgForm) {\n        this.repository.saveProduct(this.product);\n        this.router.navigateByUrl(\"/admin/main/products\");\n    }\n}\n","<div class=\"bg-primary p-2 text-white\" [class.bg-warning]=\"editing\"\n     [class.text-dark]=\"editing\">\n    <h5>{{editing  ? \"Edit\" : \"Create\"}} Product</h5>\n</div>\n<form novalidate #form=\"ngForm\" (ngSubmit)=\"save(form)\">\n    <div class=\"form-group\">\n        <label>Name</label>\n        <input class=\"form-control\" name=\"name\" [(ngModel)]=\"product.name\" />\n    </div>\n    <div class=\"form-group\">\n        <label>Category</label>\n        <input class=\"form-control\" name=\"category\" [(ngModel)]=\"product.category\" />\n    </div>\n    <div class=\"form-group\">\n        <label>Description</label>\n        <textarea class=\"form-control\" name=\"description\"\n                  [(ngModel)]=\"product.description\">\n        </textarea>\n    </div>\n    <div class=\"form-group\">\n        <label>Price</label>\n        <input class=\"form-control\" name=\"price\" [(ngModel)]=\"product.price\" />\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary m-1\" [class.btn-warning]=\"editing\">\n        {{editing ? \"Save\" : \"Create\"}}\n    </button>\n    <button type=\"reset\" class=\"btn btn-secondary\" routerLink=\"/admin/main/products\">\n        Cancel\n    </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Product } from \"../model/product.model\";\nimport { ProductRepository } from \"../model/product.repository\";\n\n@Component({\n    templateUrl: \"productTable.component.html\"\n})\nexport class ProductTableComponent {\n\n    constructor(private repository: ProductRepository) { }\n\n    getProducts(): Product[] {\n        return this.repository.getProducts();\n    }\n\n    deleteProduct(id: number) {\n        this.repository.deleteProduct(id);\n    }\n}\n","<table class=\"table table-sm table-striped\">\n    <thead>\n        <tr>\n            <th>ID</th><th>Name</th><th>Category</th><th>Price</th>\n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let p of getProducts()\">\n            <td>{{p.id}}</td>\n            <td>{{p.name}}</td>\n            <td>{{p.category}}</td>\n            <td>{{p.price | currency:\"USD\":\"symbol\":\"2.2-2\"}}</td>\n            <td>\n                <button class=\"btn btn-sm btn-warning m-1\"\n                        [routerLink]=\"['/admin/main/products/edit', p.id]\">\n                    Edit\n                </button>\n                <button class=\"btn btn-sm btn-danger\" (click)=\"deleteProduct(p.id)\">\n                    Delete\n                </button>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<button class=\"btn btn-primary\" routerLink=\"/admin/main/products/create\">\n    Create New Product\n</button>\n"],"sourceRoot":"webpack:///"}